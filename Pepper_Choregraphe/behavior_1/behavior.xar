<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="84.0896"><Box name="Show Website Touch" id="19" localization="8" tooltip="Shows url on pepper tablet screen.&#x0A;URL can be local file name or any other online rescource.&#x0A;&#x0A;If &apos;URL is Local File&apos; is selected, box show local file from inside projects &apos;html&apos; directory.&#x0A;&#x0A;If &apos;Use Language Path&apos; and &apos;URL is Local File&apos; is selected, box uses local file from language dircetory inside projects &apos;html&apos; dircetory. Language directory must be named as language the robot uses. For example &apos;de&apos; or &apos;en&apos;." x="127" y="213"><bitmap>media/images/box/internet/internet.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="custom/tablet/onButtonClick" type="0" type_size="1" nature="4" stm_value_name="custom/tablet/onButtonClick" inner="1" tooltip="custom/tablet/onButtonClick desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Output name="onButtonClick" type="0" type_size="1" nature="2" inner="0" tooltip="Output of ALMemory key &apos;custom/tablet/onButtonClick&apos;" id="6" /><Parameter name="URL" inherits_from_parent="0" content_type="3" value="index.html" default_value="index.html" custom_choice="0" tooltip="" id="7" /><Parameter name="URL is Local File" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="8" /><Parameter name="Use Language Path" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="" id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="TabletTouchEvents" id="8" localization="8" tooltip="" x="228" y="141"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Tablet Touch" id="10" localization="8" tooltip="Sends an event when the tablet is touched&#x0A;&#x0A;V1.0.1&#x0A;" x="214" y="100"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.tabletService = None
        self.connectId = None

    def onUnload(self):
        if self.tabletService:
            self.disconnectListener()
            self.isRunning = False

    def disconnectListener(self):
        if self.connectId:
            try:
                self.tabletService.onTouch.disconnect(self.connectId)
                self.connectId = None
            except Exception as e:
                self.logger.error(e)

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def  onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        self.tabletService = self._getTabletService()
        if self.tabletService:
            try:
                if not self.connectId:
                    if self.getParameter("Action") == "On touch move":
                        self.connectId = self.tabletService.onTouchMove.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch down":
                        self.connectId = self.tabletService.onTouchDownRatio.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch up":
                        self.connectId = self.tabletService.onTouchUp.connect(self.touchCallback)
            except Exception as err:
                self.logger.warning("Error during subscribe: %s " % err)
        else:
            self.logger.info("No ALTabletService, can't play listen for touch.")

    def touchCallback(self, x, y, activity):
        scale = self.tabletService.getOnTouchScaleFactor()
        self.onTouched( [x, y, activity] )
        #self.onTouched( [x/scale, y/scale, activity] )

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onTouched" type="0" type_size="1" nature="2" inner="0" tooltip="Send [x,y] position for one touch" id="4" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On touch down" default_value="On touch move" custom_choice="0" tooltip="Type of touch you want on the tablet." id="5"><Choice value="On touch move" /><Choice value="On touch down" /><Choice value="On touch up" /></Parameter></Box><Box name="Raise Event" id="1" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="866" y="83"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="custom/tablet/onTouchDown" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Tablet Touch (1)" id="4" localization="8" tooltip="Sends an event when the tablet is touched&#x0A;&#x0A;V1.0.1&#x0A;" x="220" y="383"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.tabletService = None
        self.connectId = None

    def onUnload(self):
        if self.tabletService:
            self.disconnectListener()
            self.isRunning = False

    def disconnectListener(self):
        if self.connectId:
            try:
                self.tabletService.onTouch.disconnect(self.connectId)
                self.connectId = None
            except Exception as e:
                self.logger.error(e)

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def  onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        self.tabletService = self._getTabletService()
        if self.tabletService:
            try:
                if not self.connectId:
                    if self.getParameter("Action") == "On touch move":
                        self.connectId = self.tabletService.onTouchMove.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch down":
                        self.connectId = self.tabletService.onTouchDown.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch up":
                        self.connectId = self.tabletService.onTouchUp.connect(self.touchCallback)
            except Exception as err:
                self.logger.warning("Error during subscribe: %s " % err)
        else:
            self.logger.info("No ALTabletService, can't play listen for touch.")

    def touchCallback(self, x, y):
        self.onTouched([x, y])

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onTouched" type="0" type_size="1" nature="2" inner="0" tooltip="Send [x,y] position for one touch" id="4" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On touch up" default_value="On touch move" custom_choice="0" tooltip="Type of touch you want on the tablet." id="5"><Choice value="On touch move" /><Choice value="On touch down" /><Choice value="On touch up" /></Parameter></Box><Box name="Raise Event (1)" id="6" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="482" y="383"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="custom/tablet/onTouchUp" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Only Once" id="3" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="672" y="93"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="513" y="220"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Only Once (1)" id="5" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="375" y="214"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Show Website" id="16" localization="8" tooltip="" x="505" y="33"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")
        self.tts = self.session().service("ALTextToSpeech")

    def onUnload(self):
        self.onStopped()

    def onInput_onStart(self):
        file = self.getParameter("URL")
        url = ""
        if self.getParameter("URL is Local File"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            lang = self.tts.getLanguage()
            if self.getParameter("Use Language Path"):
                if "German" in lang:
                    lang = "de/"
                else:
                    lang = "en/"
            url = "http://198.18.0.1/apps/" + url + lang + file

        self.logger.debug("loading " + url)
        self.tablet.showWebview( url )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="URL" inherits_from_parent="1" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="5" /><Parameter name="URL is Local File" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="6" /><Parameter name="Use Language Path" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="" id="7" /></Box><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="6" outputowner="0" indexofoutput="4" /><Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="5" outputowner="16" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Set Speech Lang." id="1" localization="8" tooltip="Select the language you would like the robot to speak. Any following call to&#x0A;ALTextToSpeech (Say box for instance) will use this language." x="92" y="65"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy("ALTextToSpeech")

    def onInput_onSet(self):
        self.tts.setLanguage( self.getParameter("Language") )
        self.onReady()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="German" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks." id="4"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Say Text" id="55" localization="8" tooltip="Say the text received on its input." x="590" y="67"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            #p should be an array of strings
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p[0])
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
            if (len(p) > 1):
                self.output(p[1:])
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Output name="output" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="88" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" /><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="forwardText" id="37" localization="8" tooltip="" x="317" y="84"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import os

# forward the releated text Array to a say box
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )


    def onInput_onStart(self, p):
        #p = self.typeConversion(p)
        if p == '0':
            self.failure(0)
        elif p == '1':
            self.correct(0)
        elif p == '2':
            self.mutliple(0)
        elif p == '3':
            self.welcome(0)
        else:
            self.output(p)

    def typeConversion(self, p):
        try:
            p = float(p)
            pint = int(p)
            if( p == pint ):
                p = pint
        except:
            p = str(p)
        return p]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="output" type="3" type_size="1" nature="2" inner="0" tooltip="Text to say" id="5" /><Output name="correct" type="2" type_size="1" nature="2" inner="0" tooltip="Display animation if answer is correct" id="6" /><Output name="failure" type="2" type_size="1" nature="2" inner="0" tooltip="Display animation if answer is false" id="7" /><Output name="mutliple" type="2" type_size="1" nature="2" inner="0" tooltip="Display animation if answer is given false mutliple times&#x0A;" id="8" /><Output name="welcome" type="2" type_size="1" nature="2" inner="0" tooltip="Display welcome animation&#x0A;" id="9" /></Box><Box name="Confused" id="16" localization="8" tooltip="ID : #02C 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Confused" x="673" y="316"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="82"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="27" value="-14.3298" /><Key frame="47" value="-16.8787" /><Key frame="67" value="-13.8903" /><Key frame="82" value="-16.8787" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="27" value="-2.72224" /><Key frame="47" value="4.45315" /><Key frame="67" value="-9.60496" /><Key frame="82" value="0.00240423" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="19" value="3" /><Key frame="39" value="-3" /><Key frame="59" value="3" /><Key frame="79" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="25" value="-46.4923" /><Key frame="45" value="-67.9379" /><Key frame="65" value="-61.0823" /><Key frame="79" value="-67.9379" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="25" value="-28.3914" /><Key frame="45" value="-55.7258" /><Key frame="65" value="-68.7337" /><Key frame="79" value="-55.7258" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="45" value="0.58" /><Key frame="79" value="0.17" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="25" value="69.8715" /><Key frame="45" value="73.7388" /><Key frame="65" value="75.4087" /><Key frame="79" value="73.7388" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="25" value="0.498473" /><Key frame="45" value="7.3" /><Key frame="65" value="2.89802" /><Key frame="79" value="9.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="45" value="-43" /><Key frame="79" value="-26.1" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="25" value="69.8763" /><Key frame="45" value="79.896" /><Key frame="65" value="65.9212" /><Key frame="79" value="79.896" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="25" value="44.4708" /><Key frame="45" value="55.1936" /><Key frame="65" value="69.6078" /><Key frame="79" value="55.1936" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="45" value="0.527273" /><Key frame="79" value="0.15" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="25" value="76.3803" /><Key frame="45" value="73.8315" /><Key frame="65" value="83.148" /><Key frame="79" value="73.8315" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="25" value="-0.529755" /><Key frame="45" value="-8.5" /><Key frame="65" value="-0.969213" /><Key frame="79" value="-9.8" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="45" value="52" /><Key frame="79" value="31" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Excited" id="13" localization="8" tooltip="ID : #02A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Excited" x="313" y="287"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="56"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="15" value="-18.7946" /><Key frame="21" value="-14.4756" /><Key frame="24" value="-19.4077" /><Key frame="27" value="-15.2516" /><Key frame="31" value="-19.4077" /><Key frame="34" value="-15.2516" /><Key frame="38" value="-19.4077" /><Key frame="41" value="-15.2516" /><Key frame="52" value="-15.6235" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="15" value="-0.969218" /><Key frame="52" value="-0.969218" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-2.19727" /><Key frame="38" value="-19.8" /><Key frame="53" value="-2.19727" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="20" value="0" /><Key frame="53" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="0.0878909" /><Key frame="53" value="0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="18" value="-85.5" /><Key frame="25" value="-85.9557" /><Key frame="27" value="-74.5" /><Key frame="31" value="-85.9557" /><Key frame="34" value="-74.5" /><Key frame="38" value="-85.9557" /><Key frame="40" value="-74.5" /><Key frame="44" value="-85.9557" /><Key frame="48" value="-74.5" /><Key frame="52" value="-85.9557" /><Key frame="56" value="-74.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="25" value="-81.3901" /><Key frame="31" value="-81.3901" /><Key frame="38" value="-81.3901" /><Key frame="44" value="-81.3901" /><Key frame="52" value="-81.3901" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="18" value="0.63" /><Key frame="25" value="0.27" /><Key frame="27" value="0.02" /><Key frame="31" value="0.24" /><Key frame="34" value="0.02" /><Key frame="38" value="0.28" /><Key frame="40" value="0.02" /><Key frame="44" value="0.26" /><Key frame="48" value="0.02" /><Key frame="52" value="0.24" /><Key frame="56" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="16" value="54.2" /><Key frame="23" value="66.2" /><Key frame="26" value="69.6" /><Key frame="30" value="66.2" /><Key frame="32" value="69.6" /><Key frame="35" value="66.2" /><Key frame="39" value="69.6" /><Key frame="42" value="66.2" /><Key frame="46" value="69.6" /><Key frame="50" value="66.2" /><Key frame="54" value="69.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="16" value="12.8" /><Key frame="23" value="0.5" /><Key frame="30" value="0.5" /><Key frame="35" value="0.5" /><Key frame="42" value="0.5" /><Key frame="50" value="0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="18" value="-36.1" /><Key frame="25" value="5.79845" /><Key frame="31" value="5.79845" /><Key frame="38" value="5.79845" /><Key frame="44" value="5.79845" /><Key frame="52" value="5.79845" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="18" value="85.5" /><Key frame="21" value="85.1695" /><Key frame="25" value="74.5" /><Key frame="28" value="85.1695" /><Key frame="32" value="74.5" /><Key frame="34" value="85.1695" /><Key frame="38" value="74.5" /><Key frame="41" value="85.1695" /><Key frame="45" value="74.5" /><Key frame="49" value="85.1695" /><Key frame="53" value="74.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="21" value="76.7271" /><Key frame="28" value="76.7271" /><Key frame="34" value="76.7271" /><Key frame="41" value="76.7271" /><Key frame="49" value="76.7271" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="18" value="0.63" /><Key frame="21" value="0.27" /><Key frame="25" value="0.02" /><Key frame="28" value="0.24" /><Key frame="32" value="0.02" /><Key frame="34" value="0.28" /><Key frame="38" value="0.02" /><Key frame="41" value="0.26" /><Key frame="45" value="0.02" /><Key frame="49" value="0.24" /><Key frame="53" value="0.02" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="16" value="54.2" /><Key frame="20" value="66.2" /><Key frame="24" value="69.6" /><Key frame="27" value="66.2" /><Key frame="30" value="69.6" /><Key frame="33" value="66.2" /><Key frame="36" value="69.6" /><Key frame="40" value="66.2" /><Key frame="43" value="69.6" /><Key frame="47" value="66.2" /><Key frame="51" value="69.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="16" value="-12.8" /><Key frame="20" value="-0.5" /><Key frame="27" value="-0.5" /><Key frame="33" value="-0.5" /><Key frame="40" value="-0.5" /><Key frame="47" value="-0.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="18" value="36.1" /><Key frame="21" value="6.32579" /><Key frame="28" value="6.32579" /><Key frame="34" value="6.32579" /><Key frame="41" value="6.32579" /><Key frame="49" value="6.32579" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Chill" id="18" localization="8" tooltip="ID : #02B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Chill" x="507" y="329"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="168"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="23" value="-8.2054" /><Key frame="27" value="-4.37083"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="33" value="-8.2054" /><Key frame="39" value="-4.37083"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="45" value="-8.2054" /><Key frame="51" value="-4.37083"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="57" value="-8.2054" /><Key frame="62" value="-4.37083"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="-8.2054" /><Key frame="78" value="-4.4" /><Key frame="95" value="-6.2" /><Key frame="109" value="0.4" /><Key frame="125" value="-4.37083"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="135" value="-8.2054" /><Key frame="168" value="-11.4114" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="23" value="-0.320832" /><Key frame="33" value="-0.320832" /><Key frame="45" value="-0.320832" /><Key frame="57" value="-0.320832" /><Key frame="68" value="-0.320832" /><Key frame="95" value="-23" /><Key frame="135" value="32.2" /><Key frame="168" value="-0.475968" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="18" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="40" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="63" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="85" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="111" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="133" value="-2.34809"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="168" value="-2.05019" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="18" value="2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="40" value="-2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="63" value="2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="85" value="-2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="111" value="2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="133" value="-2"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="168" value="-0.0734769" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="18" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="40" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="63" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="85" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="111" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="133" value="-0.634643"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="168" value="-0.546803" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="23" value="-30.0511" /><Key frame="45" value="-30.042"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="-30.0511"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="-30.042" /><Key frame="116" value="-30.0511"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="-30.042" /><Key frame="168" value="-29.914" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="23" value="-70.4534" /><Key frame="45" value="-71.892"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="-70.4534"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="-71.892" /><Key frame="116" value="-70.4534"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="-71.892" /><Key frame="168" value="-70.7468" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="23" value="0.602" /><Key frame="45" value="0.81"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="0.602"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="0.82" /><Key frame="116" value="0.602"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="0.82" /><Key frame="168" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="88.6313" /><Key frame="45" value="86.2174"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="88.6313"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="86.2174" /><Key frame="116" value="88.6313"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="86.2174" /><Key frame="168" value="88.97" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="12" /><Key frame="45" value="5.64113"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="12"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="5.64113" /><Key frame="116" value="12"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="5.64113" /><Key frame="168" value="7.9964" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="23" value="2.11994" /><Key frame="45" value="0.974028"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="2.11994"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="0.974028" /><Key frame="116" value="2.11994"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="0.974028" /><Key frame="168" value="0.219115" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="23" value="30.042" /><Key frame="45" value="30.0511"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="30.042"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="30.0511" /><Key frame="116" value="30.042"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="30.0511" /><Key frame="168" value="29.853" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="23" value="71.892" /><Key frame="45" value="70.4534"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="71.892"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="70.4534" /><Key frame="116" value="71.892"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="70.4534" /><Key frame="168" value="70.3747" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="23" value="0.76" /><Key frame="45" value="0.602"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="0.85"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="0.602" /><Key frame="116" value="0.85"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="0.602" /><Key frame="168" value="0.603375" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="23" value="86.2174" /><Key frame="45" value="88.6313"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="86.2174"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="88.6313" /><Key frame="116" value="86.2174"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="88.6313" /><Key frame="168" value="89.137" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="23" value="-5.64113" /><Key frame="45" value="-12"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="-5.64113"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="-12" /><Key frame="116" value="-5.64113"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="-12" /><Key frame="168" value="-8.18067" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="23" value="-0.974028" /><Key frame="45" value="-2.11994"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="68" value="-0.974028"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="90" value="-2.11994" /><Key frame="116" value="-0.974028"><Tangent side="left" interpType="linear" abscissaParam="0" ordinateParam="0" /><Tangent side="right" interpType="linear" abscissaParam="0" ordinateParam="0" /></Key><Key frame="138" value="-2.11994" /><Key frame="168" value="-0.483075" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Happy" id="12" localization="8" tooltip="ID : #02A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Happy" x="847" y="196"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="87"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-15" /><Key frame="23" value="-8.48092" /><Key frame="27" value="-12.3871" /><Key frame="31" value="-10.217" /><Key frame="36" value="-15" /><Key frame="40" value="-8.26391" /><Key frame="44" value="-12.1701" /><Key frame="48" value="-10" /><Key frame="54" value="-15" /><Key frame="58" value="-8.26391" /><Key frame="62" value="-12.1701" /><Key frame="66" value="-10" /><Key frame="71" value="-15" /><Key frame="75" value="-10.676" /><Key frame="87" value="-11.5137" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="15" value="-0.615236" /><Key frame="24" value="2" /><Key frame="40" value="-2" /><Key frame="58" value="2" /><Key frame="74" value="-2" /><Key frame="87" value="-0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-10.1" /><Key frame="84" value="-2.02149" /><Key frame="87" value="-1.84571" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="5" /><Key frame="36" value="-5" /><Key frame="54" value="5" /><Key frame="71" value="-5" /><Key frame="84" value="-0.0878909" /><Key frame="87" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="3.5" /><Key frame="84" value="-0.175782" /><Key frame="87" value="0.351564" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-53" /><Key frame="28" value="-38.4" /><Key frame="36" value="-61.1" /><Key frame="45" value="-38.4" /><Key frame="54" value="-53" /><Key frame="63" value="-38.4" /><Key frame="71" value="-61.1" /><Key frame="79" value="-38.4" /><Key frame="87" value="-29.9707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-63.5" /><Key frame="36" value="-100.538" /><Key frame="54" value="-63.5" /><Key frame="71" value="-100.538" /><Key frame="87" value="-70.4883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" alwaysVisible="1" unit="1"><Key frame="20" value="0.020089" /><Key frame="28" value="0.34" /><Key frame="36" value="0.173538" /><Key frame="45" value="0.34" /><Key frame="54" value="0.020089" /><Key frame="63" value="0.34" /><Key frame="71" value="0.173538" /><Key frame="79" value="0.34" /><Key frame="87" value="0.582601" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="75.4" /><Key frame="36" value="101.5" /><Key frame="54" value="75.4" /><Key frame="71" value="101.5" /><Key frame="87" value="89.3848" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="14.8" /><Key frame="36" value="14.4" /><Key frame="54" value="14.8" /><Key frame="71" value="14.4" /><Key frame="87" value="8.17382" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-6.39955" /><Key frame="36" value="0.723418" /><Key frame="54" value="-6.39955" /><Key frame="71" value="0.723418" /><Key frame="87" value="0.876518" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="61.1" /><Key frame="28" value="39.8" /><Key frame="36" value="53" /><Key frame="45" value="39.8" /><Key frame="54" value="61.1" /><Key frame="63" value="39.8" /><Key frame="71" value="53" /><Key frame="79" value="39.8" /><Key frame="87" value="29.9707" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="100.538" /><Key frame="36" value="63.5" /><Key frame="54" value="100.538" /><Key frame="71" value="63.5" /><Key frame="87" value="70.1367" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" alwaysVisible="1" unit="1"><Key frame="20" value="0.173538" /><Key frame="28" value="0.29" /><Key frame="36" value="0.020089" /><Key frame="45" value="0.29" /><Key frame="54" value="0.173538" /><Key frame="63" value="0.29" /><Key frame="71" value="0.020089" /><Key frame="79" value="0.29" /><Key frame="87" value="0.585237" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="101.5" /><Key frame="36" value="75.4" /><Key frame="54" value="101.5" /><Key frame="71" value="75.4" /><Key frame="87" value="89.1211" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-14.4" /><Key frame="36" value="-14.8" /><Key frame="54" value="-14.4" /><Key frame="71" value="-14.8" /><Key frame="87" value="-8.34961" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-0.723418" /><Key frame="36" value="6.39955" /><Key frame="54" value="-0.723418" /><Key frame="71" value="6.39955" /><Key frame="87" value="0.788627" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="19" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="37" indexofinput="2" outputowner="19" indexofoutput="6" /><Link inputowner="55" indexofinput="2" outputowner="37" indexofoutput="5" /><Link inputowner="55" indexofinput="2" outputowner="55" indexofoutput="5" /><Link inputowner="13" indexofinput="2" outputowner="37" indexofoutput="6" /><Link inputowner="16" indexofinput="2" outputowner="37" indexofoutput="7" /><Link inputowner="18" indexofinput="2" outputowner="37" indexofoutput="8" /><Link inputowner="12" indexofinput="2" outputowner="37" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>